import sqlite3

# Подключение к БД
connection = sqlite3.connect("restoran.db")
cursor = connection.cursor()

# Создание таблицы Customers
cursor.execute('''CREATE TABLE IF NOT EXISTS Customers (
                    Customer_ID INTEGER PRIMARY KEY AUTOINCREMENT,
                    First_name VARCHAR(50),
                    Last_name VARCHAR(50),
                    Phone_num VARCHAR(20),
                    Email VARCHAR(100),
                    Login VARCHAR(50) UNIQUE,
                    Password VARCHAR(100),
                    Role VARCHAR(20) DEFAULT 'client');
                    ''')

# таблица Reservations
cursor.execute('''CREATE TABLE IF NOT EXISTS Reservations(
    Reservation_ID INTEGER PRIMARY KEY AUTOINCREMENT,     
    Customer_ID INT,
    Table_ID INT,     
    Date DATETIME NOT NULL,
    Amount_people INT NOT NULL,     
    FOREIGN KEY (Customer_ID) REFERENCES Customers(Customer_ID),
    FOREIGN KEY (Table_ID) REFERENCES Tables(Table_ID) );
    ''')

# таблицв Tables
cursor.execute('''CREATE TABLE IF NOT EXISTS Tables(
Table_ID INTEGER PRIMARY KEY AUTOINCREMENT,
Table_num INT NOT NULL UNIQUE,
Capacity INT NOT NULL);
''')

# таблица Orders

cursor.execute('''CREATE TABLE IF NOT EXISTS Orders(
Order_ID INTEGER PRIMARY KEY AUTOINCREMENT,
Customer_ID INT,
Employee_ID INT,
Order_date DATETIME NOT NULL,
Total_Amount DECIMAL(10, 2) NOT NULL,
Order_status TEXT(20) NOT NULL DEFAULT 'Pending', 
FOREIGN KEY (Customer_ID) REFERENCES Customers(Customer_ID),
FOREIGN KEY (Employee_ID) REFERENCES Employees(Employee_ID));
''')

# таблица Employees
cursor.execute('''CREATE TABLE IF NOT EXISTS Employees (
    Employee_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    First_name VARCHAR(50),
    Last_name VARCHAR(50),
    Phone_num VARCHAR(20),
    Email VARCHAR(100),
    Login VARCHAR(50) UNIQUE,
    Password VARCHAR(100),
    Role VARCHAR(20) NOT NULL); 
    ''')
# # Пример: admin, waiter, manager

# Таблица MenuItems
cursor.execute('''
CREATE TABLE IF NOT EXISTS MenuItems (
    MenuItem_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name VARCHAR(100) NOT NULL UNIQUE,
    Description TEXT,
    Price DECIMAL(10, 2) NOT NULL,
    Category VARCHAR(50)
);
''')

# таблица OrderItems
cursor.execute('''CREATE TABLE IF NOT EXISTS OrderItems ( 
    OrderItem_ID INTEGER PRIMARY KEY AUTOINCREMENT,         
    Order_ID INT, 
    MenuItem_ID INT,         
    Quantity INT NOT NULL, 
    Price DECIMAL(10, 2) NOT NULL,     
    FOREIGN KEY (Order_ID) REFERENCES Orders(Order_ID), 
    FOREIGN KEY (MenuItem_ID) REFERENCES MenuItems(MenuItem_ID)
); ''')

# Таблица MenuItemIngredient
cursor.execute('''
CREATE TABLE IF NOT EXISTS MenuItemIngredients (
    MenuItem_ID INT,
    Ingredient_ID INTEGER,
    Quantity DECIMAL(10, 2) NOT NULL,
    Unit VARCHAR(20) NOT NULL,
    PRIMARY KEY (MenuItem_ID, Ingredient_ID),
    FOREIGN KEY (MenuItem_ID) REFERENCES MenuItems(MenuItem_ID),
    FOREIGN KEY (Ingredient_ID) REFERENCES Ingredients(Ingredient_ID)
);
''')
# таблица Ingredients
cursor.execute('''
CREATE TABLE IF NOT EXISTS Ingredients (
    IngredientID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name VARCHAR(100) NOT NULL UNIQUE,
    Quantity_in DECIMAL(10, 2) NOT NULL,
    Unit VARCHAR(20) NOT NULL
);
''')

customers_info = [('Петр', 'Сидоров', '+79160451112', 'sidorov@mail.com', 'sidor', '12345', 'client'),
                  ('Мария', 'Смирнова', '+79160451345', 'smirnova@mail.com', 'maria_s', 'password', 'client'),
                  ('Ольга', 'Федорова', '+79160451567', 'fedorova@mail.com', 'olga_f', '54321', 'client'),
                  ('Сергей', 'Михайлов', '+79160451678', 'mikhailov@mail.com', 'serg123', 'pass123', 'client')
                  ]
tables_info = [
    (1, 2),
    (2, 2),
    (3, 4),
    (4, 4),
    (5, 4),
    (6, 4),
    (7, 4),
    (8, 4),
    (9, 6),
    (10, 8)]

employees_info = [('', '', '', '', 'admin', 'admin', 'admin'),
                  ('Иван', 'Смирнов', '+7 922 456 7890', 'ivan.smirnov@mail.com', 'ivan_smirnov', '12345', 'employee'),
                  ('Анна', 'Воронцова', '+7 942 678 9012', 'voroncova@mail.com', 'anna', 'qwerty', 'employee'),
                  ('Екатерина', 'Каткова', '+7 932 567 8901', 'katerina.katkova@mail.com', 'katerina_katkova', 'Kat0k#2001', 'employee'),
                  ('Максим', 'Соколов', '+7 952 789 0123', 'maxim.sokolov@mail.com', 'maxim_sokolov', 'Sok0lMax!2024', 'employee'),
                  ('Ольга', 'Новикова', '+7 962 890 1234', 'olga.novikova@mail.com', 'olga_novikova', 'Nov1kOlg@2000', 'employee'),
                  ('Дмитрий', 'Кузнецов', '+7 916 045 1456', 'kuznetsov@mail.com', 'dima_k', 'abcde', 'employee')]

menu_items = [
    # Закуски и легкие блюда
    ("Брускетта с помидорами и базиликом",
     "Хрустящий поджаренный хлеб с сочными помидорами, свежим базиликом и оливковым маслом. Отличная закуска для начала трапезы",
     200, "Закуски и легкие блюда"),
    ("Карпаччо из говядины с рукколой и пармезаном",
     "Тонко нарезанная сырая говядина с острой рукколой и нежными пластинками пармезана, сбрызнутая оливковым маслом и лимонным соком",
     400, "Закуски и легкие блюда"),
    ("Креветки в кляре с соусом сладкий чили",
     "Креветки, обжаренные в хрустящем кляре, подаются с пикантным соусом на основе сладкого чили", 350,
     "Закуски и легкие блюда"),
    ("Антипасти", "Итальянская закуска с разнообразием оливок, ароматных сыров, нежного прошутто и хрустящих гриссини",
     450, "Закуски и легкие блюда"),
    ("Спринг-роллы с овощами и соусом хойсин",
     "Легкие и свежие роллы, наполненные овощами, подаются с пикантным соусом хойсин", 300, "Закуски и легкие блюда"),
    ("Хрустящие кальмары с чесночным соусом",
     "Кальмары в панировке, обжаренные до хрустящей корочки, с нежным чесночным соусом для макания", 350,
     "Закуски и легкие блюда"),
    ("Тартар из лосося с авокадо и соусом юзу",
     "Свежий лосось, нарезанный кубиками, в сочетании с мягким авокадо и освежающим соусом юзу", 500,
     "Закуски и легкие блюда"),
    # Салаты
    ("Греческий салат с фетой и оливками",
     "Классический греческий салат с огурцами, помидорами, фетой, оливками и орегано, заправленный оливковым маслом",
     250, "Салаты"),
    ("Салат Цезарь с курицей и пармезаном",
     "Курица гриль, хрустящие крутоны и листья салата, политые кремовым соусом и посыпанные пармезаном", 300, "Салаты"),
    ("Салат с киноа, авокадо и томатами черри",
     "Легкий и питательный салат с киноа, свежим авокадо, сочными томатами черри и лёгким лимонным соусом", 350,
     "Салаты"),
    ("Тёплый салат с телятиной и запечёнными овощами",
     "Салат с нежной телятиной, запечёнными овощами, зеленью и пикантной заправкой", 400, "Салаты"),
    ("Салат с морепродуктами и апельсином",
     "Легкий салат с морепродуктами, апельсином и зеленью, с лёгким цитрусовым соусом", 450, "Салаты"),
    ("Капрезе с помидорами, моцареллой и базиликом",
     "Простой, но вкусный салат с томатами, моцареллой и свежим базиликом, приправленный оливковым маслом", 300,
     "Салаты"),
    # Супы
    ("Том Ям с креветками и грибами",
     "Пряный тайский суп с креветками, грибами, лимонной травой и острыми специями, подается с лаймом и свежими травами",
     400, "Супы"),
    ("Тыквенный крем-суп с гренками", "Нежный крем-суп из тыквы с ароматными специями и хрустящими гренками", 250,
     "Супы"),
    ("Борщ с говядиной и сметаной",
     "Классический борщ с мясом, овощами, приправленный чесноком и укропом, подается со сметаной", 300, "Супы"),
    ("Французский луковый суп с сырной корочкой",
     "Густой суп на основе карамелизированного лука, с добавлением бульона и сыра, запеченный до золотистой корочки",
     350, "Супы"),
    ("Гаспачо с оливковым маслом и зеленью",
     "Освежающий холодный испанский суп из свежих томатов, огурцов и перца, с добавлением оливкового масла и зелени",
     250, "Супы"),
    # Основные блюда
    ("Стейк из говядины с овощами-гриль", "Сочное стейк из говядины, поданный с обжаренными овощами-гриль", 700,
     "Основные блюда"),
    ("Филе лосося с соусом терияки и рисом",
     "Филе лосося, приготовленное с глазурью из соуса терияки, подается с отварным рисом", 650, "Основные блюда"),
    ("Паста Карбонара с беконом и пармезаном",
     "Паста с кремовым соусом, беконом и пармезаном, приправленная черным перцем", 400, "Основные блюда"),
    ("Ризотто с грибами и трюфельным маслом", "Кремовое ризотто с лесными грибами и ароматным трюфельным маслом", 450,
     "Основные блюда"),
    ("Куриное филе с картофельным пюре и соусом из зелени",
     "Нежное куриное филе, поданное с картофельным пюре и соусом из свежих трав", 400, "Основные блюда"),
    ("Тушеная говядина с красным вином и овощами",
     "Мягкая говядина, тушеная с красным вином, морковью, картофелем и луком", 600, "Основные блюда"),
    ("Медальоны из свинины с соусом барбекю и картофелем",
     "Нежные медальоны из свинины, поданные с ароматным соусом барбекю и жареным картофелем", 550, "Основные блюда"),
    ("Гриль-сет", "Сет на гриле с курицей, колбасками, свиными ребрышками и овощами", 750, "Основные блюда"),
    ("Лазанья Болоньезе с соусом бешамель",
     "Лазанья с мясным соусом Болоньезе и нежным соусом бешамель, запеченная до золотистой корочки", 450,
     "Основные блюда"),
    ("Феттучини с морепродуктами и сливочным соусом", "Паста феттучини с морепродуктами и кремовым сливочным соусом",
     550, "Основные блюда"),
    # Гарниры
    ("Картофельное пюре", "Нежное и воздушное картофельное пюре, приправленное сливочным маслом и молоком", 100,
     "Гарниры"),
    ("Овощи-гриль", "Сезонные овощи, запеченные на гриле до легкой карамелизации", 150, "Гарниры"),
    ("Рис с зеленью", "Отварной рис с добавлением зелени, приправленный оливковым маслом", 100, "Гарниры"),
    ("Картофель фри", "Хрустящий картофель фри, поданный с кетчупом или майонезом", 120, "Гарниры"),
    ("Спаржа на гриле", "Спаржа, приготовленная на гриле до хрустящей корочки", 200, "Гарниры"),
    ("Соте из лесных грибов", "Обжаренные лесные грибы с чесноком, зеленью и оливковым маслом", 250, "Гарниры"),
    # Десерты
    ("Чизкейк с клубничным соусом", "Нежный чизкейк с кремовой начинкой, поданный с ароматным клубничным соусом", 250,
     "Десерты"),
    ("Панна-котта с малиновым соусом", "Итальянский десерт из взбитых сливок с малиновым соусом", 200, "Десерты"),
    ("Тирамису", "Классический итальянский десерт с кофе и маскарпоне, пропитанный ликером и покрытый какао", 250,
     "Десерты"),
    ("Мусс из белого шоколада с миндалём", "Легкий мусс из белого шоколада с хрустящими кусочками миндаля", 300,
     "Десерты"),
    ("Яблочный штрудель с ванильным соусом", "Тонкое тесто с яблоками, корицей и сахаром, подается с ванильным соусом",
     250, "Десерты"),
    # Напитки
    ("Кофе американо", "Классический черный кофе с насыщенным вкусом", 150, "Напитки"),
    ("Капучино", "Кофе с молочной пеной, идеальное сочетание для любителей кремового напитка", 200, "Напитки"),
    ("Латте", "Молочный кофе с мягкой пеной, деликатный вкус", 220, "Напитки"),
    ("Чай зелёный/чёрный", "Традиционные чаи, которые подходят для любого времени суток", 100, "Напитки"),
    ("Матча латте", "Чай матча с молоком, дающий насыщенный и слегка сладковатый вкус", 100, "Напитки"),
    ("Домашний лимонад", "Освежающий лимонад", 250, "Напитки"),
    ("Минеральная вода", "Классическая минералка", 100, "Напитки"),
    ("Апельсиновый фреш", "Сочный апельсиновый фреш с натуральным вкусом", 200, "Напитки"),
    ("Мохито", "Освежающий безалкогольный мохито с мятой, лаймом и газированной водой", 180, "Напитки"),
    # Специальное предложение дня
    ("Сезонное блюдо: Паста с морепродуктами и соусом песто",
     "Паста с морепродуктами, в сочетании с ароматным соусом песто", 550, "Специальное предложение дня"),
    ("Десерт дня: Тарт с лимонным курдом", "Легкий и освежающий тарт с лимонным курдом и хрустящей основой", 250,
     "Специальное предложение дня")
]

ingredients = [
    # Овощи
    ("Помидоры", 17000, "г"),
    ("Базилик свежий", 2000, "г"),
    ("Говядина", 15000, "г"),
    ("Руккола", 2500, "г"),
    ("Пармезан", 3000, "г"),
    ("Креветки", 5000, "г"),
    ("Соус сладкий чили", 2000, "мл"),
    ("Сыр Ассорти", 3000, "г"),
    ("Прошутто", 2000, "г"),
    ("Гриссини", 150, "шт"),
    ("Овощи", 25000, "г"),
    ("Соус хойсин", 1000, "мл"),
    ("Кальмары", 4000, "г"),
    ("Чесночный соус", 1000, "мл"),
    ("Лосось", 6000, "г"),
    ("Авокадо", 3000, "г"),
    ("Соус юзу", 500, "мл"),

    # Салаты и другие блюда
    ("Салат Фета", 2000, "г"),
    ("Оливки", 5000, "г"),
    ("Куриное филе", 7500, "г"),
    ("Сыр Пармезан", 2500, "г"),
    ("Киноа", 1000, "г"),
    ("Томаты черри", 3600, "г"),
    ("Телятинa", 6500, "г"),
    ("Морепродукты", 4000, "г"),
    ("Апельсины", 6000, "г"),
    ("Моцарелла", 3000, "г"),

    # Супы
    ("Грибы", 3500, "г"),
    ("Тыква", 4000, "г"),
    ("Гренки", 300, "шт"),
    ("Свекла", 3000, "г"),
    ("Сметана", 2000, "г"),
    ("Лук репчатый", 4000, "г"),
    ("Оливковое масло", 8000, "мл"),

    # Основные блюда

    ("Соус терияки", 1000, "мл"),
    ("Спагетти", 4000, "г"),
    ("Бекон", 4500, "г"),
    ("Рис", 7000, "г"),
    ("Трюфельное масло", 500, "мл"),
    ("Картофель", 25000, "г"),
    ("Зелень", 3000, "г"),
    ("Свинина", 9500, "г"),
    ("Соус барбекю", 1000, "мл"),

    # Гарниры
    ("Картофель фри", 10000, "г"),
    ("Спаржа", 3000, "г"),
    ("Лесные грибы", 3000, "г"),

    # Десерты
    ("Крем-чиз", 2000, "г"),
    ("Тесто", 4000, "г"),
    ("Клубничный соус", 1000, "мл"),
    ("Шоколад черный", 2000, "г"),
    ("Мороженое ванильное", 2000, "г"),
    ("Желатин", 1000, "г"),
    ("Маскарпоне", 2000, "г"),
    ("Белый шоколад", 1000, "г"),
    ("Яблоки", 3000, "г"),
    ("Лимонный курд", 1000, "г"),

    # Напитки
    ("Кофе зерновой", 2000, "г"),
    ("Чай зелёный", 1000, "г"),
    ("Чай чёрный", 1000, "г"),
    ("Матча порошок", 1000, "г"),
    ("Лимоны", 3000, "г"),
    ("Имбирь", 1000, "г"),
    ("Малина", 5000, "г"),
    ("Мята", 1000, "г"),
    ("Вода с газом", 1000, "мл")
]

menu_item_ingredients = [
    (1, 1, 170, "г"),
    (1, 2, 20, "г"),
    (1, 34, 10, "мл"),
    (2, 3, 150, "г"),
    (2, 4, 30, "г"),
    (2, 5, 20, "г"),
    (3, 6, 100, "г"),
    (3, 7, 50, "мл"),
    (4, 19, 50, "г"),
    (4, 8, 100, "г"),
    (4, 9, 100, "г"),
    (4, 10, 10, "г"),
    (5, 12, 30, "мл"),
    (5, 11, 100, "г"),
    (6, 13, 100, "г"),
    (6, 14, 30, "мл"),
    (7, 15, 100, "г"),
    (7, 16, 50, "г"),
    (7, 17, 10, "мл"),
    (8, 1, 100, "г"),
    (8, 18, 50, "г"),
    (8, 19, 50, "г"),
    (9, 20, 100, "г"),
    (9, 21, 30, "г"),
    (10, 22, 50, "г"),
    (10, 16, 50, "г"),
    (10, 23, 50, "г"),
    (11, 24, 100, "г"),
    (11, 11, 100, "г"),
    (12, 25, 50, "г"),
    (12, 26, 50, "г"),
    (13, 1, 50, "г"),
    (13, 27, 50, "г"),
    (13, 2, 10, "г"),
    (14, 6, 100, "г"),
    (14, 28, 50, "г"),
    (14, 34, 20, "мл"),
    (15, 29, 100, "г"),
    (15, 30, 10, "г"),
    (16, 3, 100, "г"),
    (16, 32, 50, "г"),
    (17, 33, 50, "г"),
    (17, 34, 30, "мл"),
    (18, 1, 100, "г"),
    (18, 34, 10, "г"),
    (19, 3, 200, "г"),
    (19, 11, 100, "г"),
    (20, 15, 100, "г"),
    (20, 35, 20, "мл"),
    (20, 38, 100, "г"),
    (21, 36, 100, "г"),
    (21, 37, 50, "г"),
    (21, 21, 30, "г"),
    (22, 28, 100, "г"),
    (22, 39, 20, "мл"),
    (23, 20, 150, "г"),
    (23, 40, 100, "г"),
    (24, 3, 200, "г"),
    (24, 40, 100, "г"),
    (25, 42, 100, "г"),
    (25, 43, 30, "мл"),
    (25, 40, 100, "г"),
    (26, 20, 100, "г"),
    (26, 42, 100, "г"),
    (26, 40, 100, "г"),
    (26, 11, 1000, "г"),
    (27, 3, 1500, "г"),
    (27, 21, 150, "г"),
    (28, 25, 300, "г"),
    (28, 8, 300, "г"),
    (28, 36, 400, "г"),
    (29, 40, 600, "г"),
    (30, 11, 1500, "г"),
    (31, 41, 100, "г"),
    (31, 38, 300, "г"),
    (32, 40, 300, "г"),
    (33, 45, 300, "г"),
    (34, 46, 300, "г"),
    (35, 63, 300, "г"),
    (36, 63, 300, "г"),
    (37, 54, 100, "г"),
    (38, 54, 200, "г"),
    (39, 55, 300, "г"),
    (40, 57, 50, "г"),
    (41, 57, 50, "г"),
    (42, 57, 50, "г"),
    (43, 58, 50, "г"),
    (44, 60, 100, "г"),
    (45, 26, 600, "г"),
    (46, 65, 500, "мл"),
    (47, 26, 600, "г"),
    (48, 64, 100, "г"),
    (49, 25, 400, "г"),
    (50, 56, 100, "г")
]

# Вставка данных Клиентов
cursor.executemany(
    'INSERT OR IGNORE INTO Customers (First_name, Last_name, Phone_num, Email, Login, Password, Role) VALUES (?, ?, ?, ?, ?, ?, ?)',
    customers_info)

# Вставка данных Столов
cursor.executemany('INSERT OR IGNORE INTO Tables (Table_num, Capacity) VALUES (?, ?)', tables_info)

# Вставка данных Сотрудников
cursor.executemany(
    'INSERT OR IGNORE INTO Employees  (First_name, Last_name, Phone_num, Email, Login, Password, Role) VALUES (?, ?, ?, ?, ?, ?, ?)',
    employees_info)

# Вставка данных Меню
cursor.executemany('''
    INSERT OR IGNORE INTO MenuItems (Name, Description, Price, Category) VALUES (?, ?, ?, ?)
''', menu_items)

# Вставка данных Меню-Ингредиентов
cursor.executemany('''
    INSERT OR IGNORE INTO MenuItemIngredients (MenuItem_ID, Ingredient_ID, Quantity, Unit) VALUES (?, ?, ?, ?)
''', menu_item_ingredients)

# Вставка данных Ингредиентов
cursor.executemany('''
    INSERT OR IGNORE INTO Ingredients (Name, Quantity_in, Unit) VALUES (?, ?, ?)
''', ingredients)

# Сохранение изменений и закрытие соединения
connection.commit()
connection.close()
